#! /bin/bash
#SBATCH -n 1

# this file to deal with methylation information from modified bases calling
# initial files should be in METHYL-ORIG files

# if DMPK, we also remap to reference /scratch/ONT/STR/DMPK/haplo_left_CTG_repeat_100.fasta
# to see if there is info on the mapped repeats

#FOR ALLELES
# select only reads with given quality and Identity
QUALITY=20
IDENTITY=90


REF_STR=/scratch/ONT/STR/DMPK/haplo_left_CTG_repeat_100.fasta

REFS=/softs/references/Homo_sapiens.T2T/
GENOME=chm13v2.0.fa

STR=/scratch/ONT/STR

if [ $1 == "-h" ]
then
    echo "extract_reads_for_methylation.job HERE GENE"
    echo "compute methylation using modkit"
    echo "works on BAM files called with dorado/bonito"
    echo "needs BAM files in METHYL-ORIG"
    exit
fi

HERE=$1
if [ "x"$HERE = "x" ]
then
    echo "provide ROOT directory "
    exit
fi

GENE=$2
if [ "x"$GENE = "x" ]
then
    echo "provide GENE directory "
    exit
fi

MOD_NAME=$3

HERE_NO_DIR=$(echo $HERE| tr '/' '_' | sed s/scratch_ONT_//)
echo $HERE_NO_DIR
LOG=$HERE/methylation_modkit_${HERE_NO_DIR}_${GENE}_${MOD_NAME}.log

cd $HERE/$GENE
echo "cd to $HERE/$GENE" > $LOG
if [ ! -d $HERE/$GENE/METHYLATION ]
then
    mkdir $HERE/$GENE/METHYLATION
fi

DIR_METHYL=$HERE/$GENE/METHYLATION
echo " $DIR_METHYL exists" >> $LOG

# make file with read names / for all
# check that there are files in METHYL-ORIG
DIR_METHYL_ORIG=$HERE/METHYL-ORIG
BAMMETHYL=$(ls $DIR_METHYL_ORIG/*_$MOD_NAME.bam)
NBBAMMETHYL=$(echo $BAMMETHYL|wc -l)
if [ $NBBAMMETHYL -eq 0 ]
then
    echo "no BAM files for $MOD_NAME in $DIR_METHYL_ORIG" >>$LOG
    exit
elif [ $NBBAMMETHYL -ge 2 ]
then
    echo "found $NBBAMMETHYL for $MOD_NAME in $DIR_METHYL_ORIG with $MOD_NAME.bam -exiting "
    exit
else
    echo "found 1 BAM files for $MOD_NAME in $DIR_METHYL_ORIG" >>$LOG
fi

cd $DIR_METHYL
echo "cd $DIR_METHYL">> $LOG

module load samtools

# export MM and ML tags from bam files in METHYL-ORIG
for FILE in $BAMMETHYL
do
    FILE_NO_EXT=$(basename $FILE .bam)
    echo "extract MM and ML from $FILE" >> $LOG
    samtools view $FILE |awk '{printf $1; for (i=12; i<=NF; ++i) { if ($i ~ "^MM:Z:|^ML:B:") {printf "\t"$i}};printf "\n"}' | sort > overlap_${GENE}_$MOD_NAME.tag
done

#export aligned reads from BAM to sam
# important to take in BAM directory because overlap have been reverse complemented already
BAMFILE=$(ls $HERE/BAM/*.bam)
NBBAMFILE=$(echo $BAMFILE |wc -l)
if [ $NBBAMFILE -eq 0 ]
then
    echo "no BAM file in $HERE/BAM" >>$LOG
    exit
else
    echo "working with $BAMFILE" >> $LOG
fi
# obtain ids from overlap_GENE file
samtools view $HERE/OVERLAPS/overlap_$GENE.bam | awk '{print $1}' > overlap_${GENE}_$MOD_NAME.ids

# here we loop over bam file and fgrep reads in overlap in samfile
SAMFILE=overlap_${GENE}_$MOD_NAME.sam
HEADERFILE=overlap_${GENE}_$MOD_NAME.hdr
rm -f $SAMFILE
touch $SAMFILE
echo "extracting $BAMFILE to $SAMFILE" >> $LOG
for FILE in $BAMFILE
do
    samtools view $FILE | fgrep -w -f overlap_${GENE}_$MOD_NAME.ids | sort >> $SAMFILE
    samtools view -H $FILE > $HEADERFILE
done


FASTQFILE=overlap_${GENE}_$MOD_NAME.fastq
if [ $GENE = "DMPK" ]
then
    #    remap SAMFILE on reference in
    echo "cat $HEADERFILE $SAMFILE | samtools sort | samtools fastq > $FASTQFILE" >> $LOG
    cat $HEADERFILE $SAMFILE > tmp$SAMFILE
    samtools fastq tmp$SAMFILE > $FASTQFILE
    module load minimap2
    #    keep in sam format as it will be joined with tags
    # must sort before joining - BEWARE no longer valid sam file
    minimap2 -a -x map-ont $REF_STR $FASTQFILE | sort > overlap_${GENE}_${MOD_NAME}_map_STR.sam
    grep -e "^@SQ" -e "^@PG" overlap_${GENE}_${MOD_NAME}_map_STR.sam > overlap_${GENE}_${MOD_NAME}_map_STR.hdr
fi


TAGFILE=overlap_${GENE}_$MOD_NAME.tag
METHYLBAMFILE=overlap_${GENE}_$MOD_NAME.bam


# check that there are tags in $TAGFILE
TAGOK=$(grep "MM:Z" $TAGFILE | wc -l)
if [ $TAGOK -eq 0 ]
then
   echo "no tags in $TAGFILE - no information on methylation - exiting" >> $LOG
   exit
fi

module load modkit
# now join files, checking that .tags and .sam are present

if [ -f $TAGFILE ]
then
    echo "joining $SAMFILE $TAGFILE in overlap_${GENE}_$MOD_NAME.bam">>$LOG
    join $SAMFILE $TAGFILE -t $'\t' > tmp_overlap_${GENE}_$MOD_NAME
    cat $HEADERFILE tmp_overlap_${GENE}_$MOD_NAME | samtools sort > $METHYLBAMFILE
    rm -f $DIR_METHYL/tmp_overlap_${GENE}_$MOD_NAME
    samtools index $METHYLBAMFILE
    BEDMETHYLFILE=overlap_${GENE}_${MOD_NAME}_CPGfiltered.bedmethyl
    modkit pileup $METHYLBAMFILE $BEDMETHYLFILE --cpg --combine-strands --ref $REFS/$GENOME --only-tabs
    BEDMETHYLFILE=overlap_${GENE}_${MOD_NAME}_unfiltered.bedmethyl
    modkit pileup $METHYLBAMFILE $BEDMETHYLFILE --ref $REFS/$GENOME --only-tabs
fi

# now do it by alleles
# get allele length info
ALLELE_INFO=$HERE/$GENE/overlap_${GENE}_all_100.summary
if [ -f $ALLELE_INFO ]
then
    #filter reads having good quality : avg quality > 20, % identity > 90%
    grep READ-MATCH $ALLELE_INFO | grep -v "+inf" | tr -d '@' | awk -vQUALITY=$QUALITY -vIDENTITY=$IDENTITY '{if (($7 > QUALITY) && ($28>IDENTITY) && ($29 >IDENTITY)) print $1" "$19}' | sort -n -k 2 > readsQ${QUALITY}ID${IDENTITY}_${GENE}_${MOD_NAME}.ids
    # determine le plus grand gap entre la longueurs de deux reads successifs
    # enlever les 2 premiers, 2 derniers qui peuvent etre bizares     
    THRESHOLD=$(head -n -2 readsQ${QUALITY}ID${IDENTITY}_${GENE}_${MOD_NAME}.ids | tail -n +2 | awk 'BEGIN{maxgap=0;p=$2}{if (($2-p)>maxgap) {idx=FNR; maxgap=$2-p}{p=$2}}END{print idx}')
    #print idx because we removed first 2 rows
    echo "computed $THRESHOLD reads small group" 
    THRESHOLD1=$(($THRESHOLD + 1))
    echo "computed $THRESHOLD1"
    echo "head -n $THRESHOLD readsQ${QUALITY}ID${IDENTITY}_${GENE}_${MOD_NAME}.ids > short_reads_${GENE}_$MOD_NAME.ids"
    head -n $THRESHOLD readsQ${QUALITY}ID${IDENTITY}_${GENE}_${MOD_NAME}.ids > short_reads_${GENE}_$MOD_NAME.ids
    echo "$(wc -l short_reads_${GENE}_$MOD_NAME.ids) reads in short_reads_${GENE}_$MOD_NAME.ids" >>$LOG
    echo "    tail -n +$THRESHOLD1 readsQ${QUALITY}ID${IDENTITY}_${GENE}_${MOD_NAME}.ids > long_reads_${GENE}_$MOD_NAME.ids"
    tail -n +$THRESHOLD1 readsQ${QUALITY}ID${IDENTITY}_${GENE}_${MOD_NAME}.ids > long_reads_${GENE}_$MOD_NAME.ids
    echo "$(wc -l long_reads_${GENE}_$MOD_NAME.ids) reads in long_reads_${GENE}_$MOD_NAME.ids" >>$LOG
    echo "extracted $(wc -l short_reads_${GENE}_$MOD_NAME.ids)/$(wc -l long_reads_${GENE}_$MOD_NAME.ids) reads to short/long files" >> $LOG
    for ALLELE in short long
    do
	METHYLBAMFILE_ALLELE=${ALLELE}_${GENE}_$MOD_NAME.bam
	#filter bamfile for reads
	echo "extracting $ALLELE reads  from $METHYLBAMFILE" >>$LOG

	samtools view -b -N ${ALLELE}_reads_${GENE}_$MOD_NAME.ids $METHYLBAMFILE > $METHYLBAMFILE_ALLELE
	samtools index $METHYLBAMFILE_ALLELE
	BEDMETHYLFILE=${ALLELE}_${GENE}_${MOD_NAME}_CPGfiltered.bedmethyl
	echo "extracting methylation for $ALLELE to $BEDMETHYLFILE" >>$LOG
	modkit pileup $METHYLBAMFILE_ALLELE $BEDMETHYLFILE --cpg --combine-strands --ref $REFS/$GENOME --only-tabs
	BEDMETHYLFILE=${ALLELE}_${GENE}_${MOD_NAME}_unfiltered.bedmethyl
	echo "extracting unfiltered methylation for $ALLELE to $BEDMETHYLFILE" >>$LOG
	modkit pileup $METHYLBAMFILE_ALLELE $BEDMETHYLFILE --ref $REFS/$GENOME --only-tabs
    done
fi

# now remapped version on STR
if [ $GENE = "DMPK" ]
then
    SAMFILE=overlap_${GENE}_${MOD_NAME}_map_STR.sam
    HEADERFILE=overlap_${GENE}_${MOD_NAME}_map_STR.hdr
    METHYLBAMFILE=overlap_${GENE}_${MOD_NAME}_map_STR.bam
    BEDMETHYLFILE=overlap_${GENE}_${MOD_NAME}_map_STR.bedmethyl
    if [ -f $TAGFILE ]
    then
	echo "joining ${SAMFILE} $TAGFILE in overlap_${GENE}_${MOD_NAME}_map_STR.bam">>$LOG
	join $SAMFILE $TAGFILE -t $'\t' > tmp_overlap_${GENE}_${MOD_NAME}
	cat $HEADERFILE tmp_overlap_${GENE}_$MOD_NAME | samtools sort > $METHYLBAMFILE
	rm -f $DIR_METHYL/tmp_overlap_${GENE}_$MOD_NAME
	samtools index $METHYLBAMFILE
	BEDMETHYLFILE=overlap_${GENE}_${MOD_NAME}_CPGfiltered_map_STR_DMPK.bedmethyl
	modkit pileup $METHYLBAMFILE $BEDMETHYLFILE --cpg --combine-strands --ref $REF_STR --only-tabs
	BEDMETHYLFILE=overlap_${GENE}_${MOD_NAME}_unfiltered_map_STR_DMPK.bedmethyl
	modkit pileup $METHYLBAMFILE $BEDMETHYLFILE.nofilter  --ref $REF_STR --only-tabs
    fi
fi

rm -f $DIR_METHYL/$HEADERFILE
rm -f $DIR_METHYL/$SAMFILE
rm -f $DIR_METHYL/overlap_${GENE}_$MOD_NAME.ids
rm -f $DIR_METHYL/$TAGFILE
rm -f $DIR_METHYL/tmp*.bedmethyl
